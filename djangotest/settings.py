"""
Django settings for djangotest project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'uhhk788_6l2rvop6jrp6$qfc=ma6g@h6kmu+k=pdf4!gh9#b1e'
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'uhhk788_6l2rvop6jrp6$qfc=ma6g@h6kmu+k=pdf4!gh9#b1e')

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
DEBUG = bool(os.environ.get('DJANGO_DEBUG', True))

ALLOWED_HOSTS = [
    #'8e41bf32.ngrok.io',
    'instagramdjango.herokuapp.com',
    '127.0.0.1',
]


# Application definition

INSTALLED_APPS = [
    'graph',
    'accounts',
    'payment',
    'celery',
    'paypal.standard.ipn',
    'django_celery_beat',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangotest.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangotest.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get('DB_NAME', 'instagram'),
        'USER': os.environ.get('DB_USER', 'postgres'),
        'PASSWORD': os.environ.get('DB_PASS', 'lovelife24'),
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

#changed for serialization
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "djangotest/static")

#add this for auth
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'

#sending email auth
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'cryptovariancebot@gmail.com'
EMAIL_HOST_PASSWORD = 'U4f)7kbz[9G?JXSG'
EMAIL_PORT = 587

AUTHENTICATION_BACKENDS = {
    'django.contrib.auth.backends.ModelBackend',
}

from celery.schedules import crontab
#CELERY_BROKER_URL = 'amqp://localhost'

CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'
#CELERY_BEAT_SCHEDULE = {
    #'add': {
        #'task': 'graph.tasks.checkTime',
        #'schedule': crontab(minute=59, hour=23),
        #'schedule': crontab(minute=2),
        #'args': (*args)
    #},
#}

PAYPAL_RECEIVER_EMAIL = 'cryptovariancebot-facilitator@gmail.com'
PAYPAL_TEST = True


# Heroku: Update database configuration from $DATABASE_URL.
import dj_database_url
db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)

# Simplified static file serving.
# https://warehouse.python.org/project/whitenoise/



STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

#adding for paypal - not sure if needed
BROKER_URL = os.environ.get("CLOUDAMQP_URL", "amqp://qgnfkggm:AIIdNOa2FqZvcIe0PSJJSn7s0IzBtgUu@shark.rmq.cloudamqp.com/qgnfkggm")
BROKER_POOL_LIMIT = 3
BROKER_CONNECTION_MAX_RETRIES = None


#CELERY_ACCEPT_CONTENT = ["json", "msgpack"]
#CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'

#if BROKER_URL == "django://":
    #INSTALLED_APPS += ("kombu.transport.django",)